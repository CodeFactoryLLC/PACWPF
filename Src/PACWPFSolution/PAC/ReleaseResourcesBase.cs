using System;

namespace PAC
{
    public abstract class ReleaseResourcesBase:IReleaseResources
    {
        private bool _isDisposed;

        #region Implementation of IDisposable

        /// <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        public void Dispose()
        {
            if(IsDisposed) return;
            ReleaseResources();
            _isDisposed = true;

        }

        #endregion

        #region Implementation of IReleaseResources

        /// <summary>
        /// Called by the disposal process to release resources that have dependencies in other layers of PAC.
        /// </summary>
        public void ReleaseResources()
        {
            try
            {
                ReleaseContracts();
                AutomatedReleaseContracts();
                ReleaseInternalResources();
                ReleaseInternalResourcesAutomated();

            }
            catch (Exception unhandledError)
            {
                //Add exception management
            }
            
        }

        /// <summary>
        /// Release events subscriptions that has been updated through code automation.
        /// </summary>
        protected virtual void AutomatedReleaseContracts()
        {
            //Intentionally blank.
        }

        /// <summary>
        /// Release resources that are shared with other parts of PAC outside this classes implementation.
        /// </summary>
        protected abstract void ReleaseContracts();

        /// <summary>
        /// Release logic to be applied to any objects that require special handling internal this classes implementation.
        /// </summary>
        protected abstract void ReleaseInternalResources();

        /// <summary>
        /// Release logic to be applied to any objects that require special handling internal this classes implementation. Auto Generated by code automation.
        /// </summary>
        protected virtual void ReleaseInternalResourcesAutomated()
        {
            //Intentionally blank
        } 
        
        /// <summary>
        /// Flag that determined if this controller has been disposed.
        /// </summary>
        public bool IsDisposed => _isDisposed;

        #endregion
    }
}
